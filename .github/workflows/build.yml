name: Build Desktop App

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      # 避免 electron-builder 嘗試找簽章造成卡住
      CSC_IDENTITY_AUTO_DISCOVERY: false
      # 若需下載私有模型：在 Repo → Settings → Secrets 建立 HF_TOKEN，並啟用下一行
      # HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HF_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show workspace (debug)
        shell: pwsh
        run: |
          Write-Host "Workspace:" (Get-Location)
          Get-ChildItem -Force

      # ---- Node ----
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node deps (lockfile-aware)
        shell: pwsh
        run: |
          if (Test-Path "package-lock.json") {
            Write-Host "Found package-lock.json → npm ci"
            npm ci
          } else {
            Write-Host "No lockfile → npm install"
            npm install --no-audit --fund=false
          }

      # ---- Python ----
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Prepare venv & install Python deps
        shell: pwsh
        run: |
          python -m venv python/venv
          python/venv/Scripts/python -m pip install --upgrade pip
          if (Test-Path 'python/requirements.txt') {
            python/venv/Scripts/pip install -r python/requirements.txt
          }
          python/venv/Scripts/pip install huggingface_hub

      - name: Download SDXL-Turbo model (relative paths only)
        shell: pwsh
        run: >
          python/venv/Scripts/python -c
          "from huggingface_hub import snapshot_download;
          from pathlib import Path;
          target=Path('python/models/sd-turbo');
          target.mkdir(parents=True, exist_ok=True);
          snapshot_download(repo_id='stabilityai/sdxl-turbo',
                            local_dir=str(target),
                            local_dir_use_symlinks=False);
          print('Model downloaded to:', target)"

      # ---- Build Electron (outputs to dist/) ----
      - name: Build Windows installer
        run: npx electron-builder --win
        # 或改為：npm run build:win（若你在 package.json 有對應 script）

      # ---- Upload artifacts ----
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: |
            dist/*.exe
            dist/*.msi
            dist/*.zip
            dist/*.7z
          if-no-files-found: error
