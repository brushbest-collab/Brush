name: Build Desktop App (Win, no publish)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      EB_LOG: ${{ github.workspace }}\eb.log

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Locate app (find package.json)
        id: locate
        shell: pwsh
        run: |
          $pkg = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Filter package.json -File |
            Where-Object { $_.FullName -notmatch '\\node_modules\\' } |
            Select-Object -First 1
          if ($pkg) {
            "APP_DIR=$($pkg.DirectoryName)" | Out-File -FilePath $env:GITHUB_ENV -Append
            "HAS_NODE_APP=true"          | Out-File -FilePath $env:GITHUB_ENV -Append
            if (Test-Path (Join-Path $pkg.DirectoryName 'package-lock.json')) { "HAS_LOCK=true"  | Out-File -FilePath $env:GITHUB_ENV -Append }
            else                                                             { "HAS_LOCK=false" | Out-File -FilePath $env:GITHUB_ENV -Append }
            Write-Host "App dir = $($pkg.DirectoryName)"
          } else {
            "HAS_NODE_APP=false" | Out-File -FilePath $env:GITHUB_ENV -Append
            "APP_DIR=$env:GITHUB_WORKSPACE" | Out-File -FilePath $env:GITHUB_ENV -Append
            Write-Warning "No package.json found. Node build steps will be skipped."
          }

      - name: Setup Node.js 20
        if: env.HAS_NODE_APP == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node dependencies
        if: env.HAS_NODE_APP == 'true'
        working-directory: ${{ env.APP_DIR }}
        shell: pwsh
        run: |
          if (Test-Path 'package-lock.json') { npm ci } else { npm i }

      - name: Ensure icon exists (optional)
        if: env.HAS_NODE_APP == 'true'
        working-directory: ${{ env.APP_DIR }}
        shell: pwsh
        run: |
          $candidates = @('assets\icon.ico','build\icon.ico','icon.ico')
          if (-not ($candidates | ForEach-Object { Test-Path $_ } | Where-Object { $_ } )) {
            Write-Warning "No custom icon found (assets\icon.ico / build\icon.ico / icon.ico). Electron default icon will be used."
          }

      - name: Build (no publish)
        if: env.HAS_NODE_APP == 'true'
        working-directory: ${{ env.APP_DIR }}
        shell: pwsh
        continue-on-error: true
        run: |
          $ErrorActionPreference = 'continue'
          npx electron-builder --win --x64 --publish never *>&1 | Tee-Object -FilePath $env:EB_LOG
          if (Test-Path '.\dist') { Write-Host "dist exists." } else { Write-Warning "No installers produced." }

      - name: Upload installers
        if: env.HAS_NODE_APP == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: ${{ env.APP_DIR }}\dist\**

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            ${{ env.EB_LOG }}
          if-no-files-found: warn
