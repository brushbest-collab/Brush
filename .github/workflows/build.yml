name: Build Desktop (Win, no publish)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      APP_DIR: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node deps
        run: npm ci

      # 建 venv + 安裝相依 + 建立 PBS 標記
      - name: Prepare Python (venv + deps + PBS marker)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $app   = "$env:APP_DIR"
          $pyDir = Join-Path $app 'python'
          New-Item -ItemType Directory -Force -Path $pyDir | Out-Null

          python -m venv (Join-Path $pyDir 'venv')
          $venvPy = Join-Path $pyDir 'venv\Scripts\python.exe'

          & $venvPy -m pip install --upgrade pip wheel
          if (Test-Path (Join-Path $app 'python\requirements.txt')) {
            & $venvPy -m pip install -r (Join-Path $app 'python\requirements.txt')
          }
          & $venvPy -m pip install 'huggingface_hub[hf_transfer]'

          # 讓 app 能判斷「已內建 Python」
          New-Item -ItemType Directory -Force -Path (Join-Path $pyDir 'pbs') | Out-Null
          Set-Content -Path (Join-Path $pyDir 'pbs\OK') -Value 'ok' -Encoding ASCII

      # 下載模型到 python/models/sd-turbo
      - name: Download SDXL-Turbo model
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $pyDir  = Join-Path "$env:APP_DIR" 'python'
          $venvPy = Join-Path $pyDir 'venv\Scripts\python.exe'
          $code = @'
          from huggingface_hub import snapshot_download
          from pathlib import Path
          target = Path(r"python/models/sd-turbo")
          snapshot_download(repo_id="stabilityai/sdxl-turbo",
                            local_dir=str(target),
                            local_dir_use_symlinks=False)
          print("model saved to", target)
          '@
          $tmp = Join-Path $env:RUNNER_TEMP 'dl_model.py'
          Set-Content -Path $tmp -Value $code -Encoding UTF8
          & $venvPy $tmp 2>&1 | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\logs\model-download.txt"

      - name: Build (no publish)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          npx electron-builder --win --x64 --publish never 2>&1 | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\eb.log"

      - name: Upload installers
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: dist/*.{exe,msi,zip,7z}
          if-no-files-found: ignore

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            eb.log
            logs/**
