name: Build Desktop App (diagnostic)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: false
      NPM_CONFIG_FUND: false
      NPM_CONFIG_AUDIT: false
      # HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HF_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare logs folder
        shell: pwsh
        run: New-Item -ItemType Directory -Force -Path logs | Out-Null

      - name: Show workspace tree
        shell: pwsh
        run: |
          (Get-Location).Path | Tee-Object -FilePath logs/00-cwd.txt
          Get-ChildItem -Recurse -Force | Select-Object FullName, Length |
            Format-Table -AutoSize | Out-String | Tee-Object -FilePath logs/01-tree.txt

      # ---------- Node ----------
      - name: Setup Node (with npm cache if lockfile exists)
        if: ${{ hashFiles('package-lock.json') != '' || hashFiles('**/package-lock.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            **/package-lock.json

      - name: Setup Node (no cache)
        if: ${{ hashFiles('package-lock.json') == '' && hashFiles('**/package-lock.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Print Node/NPM versions
        run: |
          node -v | Tee-Object -FilePath logs/02-node.txt
          npm -v  | Tee-Object -FilePath logs/03-npm.txt -Append

      - name: Ensure package.json exists and has build field
        shell: pwsh
        run: |
          if (-not (Test-Path "package.json")) { throw "package.json not found at repo root" }
          Get-Content package.json | Tee-Object -FilePath logs/04-package.json.txt
          $pkg = Get-Content package.json | ConvertFrom-Json
          if (-not $pkg.build) {
            Write-Warning "No 'build' field in package.json. electron-builder may fail."
          }

      - name: Install Node deps (lockfile-aware, verbose -> log file)
        shell: pwsh
        run: |
          if (Test-Path "package-lock.json") {
            Write-Host "Found package-lock.json → npm ci"
            npm ci --loglevel verbose *>&1 | Tee-Object -FilePath logs/05-npm-install.log
          } else {
            Write-Host "No lockfile → npm install"
            npm install --legacy-peer-deps --loglevel verbose *>&1 | Tee-Object -FilePath logs/05-npm-install.log
          }

      - name: Ensure electron-builder available
        shell: pwsh
        run: |
          npx --yes electron-builder --version *>&1 | Tee-Object -FilePath logs/06-electron-builder-version.txt

      # ---------- Python ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Prepare venv & install Python deps
        shell: pwsh
        run: |
          python -m venv python/venv
          python/venv/Scripts/python -m pip install --upgrade pip *>&1 | Tee-Object -FilePath logs/07-pip-upgrade.log
          if (Test-Path 'python/requirements.txt') {
            python/venv/Scripts/pip install -r python/requirements.txt *>&1 | Tee-Object -FilePath logs/08-pip-req.log
          }
          python/venv/Scripts/pip install huggingface_hub *>&1 | Tee-Object -FilePath logs/09-pip-hf.log

      - name: Download SDXL-Turbo model
        shell: pwsh
        run: >
          python/venv/Scripts/python -c
          "from huggingface_hub import snapshot_download;
          from pathlib import Path;
          target=Path('python/models/sd-turbo'); target.mkdir(parents=True, exist_ok=True);
          snapshot_download(repo_id='stabilityai/sdxl-turbo', local_dir=str(target), local_dir_use_symlinks=False);
          print('Model downloaded to:', target)" *>&1 | Tee-Object -FilePath logs/10-model-download.log

      # ---------- Build ----------
      - name: Build Windows installer (verbose -> log file)
        run: >
          npx electron-builder --win --publish never --x64
          --config.asar=true --config.generateUpdatesFilesForAllChannels=false
          *>&1 | tee logs/11-electron-builder.log

      # ---------- Upload logs & artifacts ----------
      - name: Upload CI logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: logs/**
          if-no-files-found: warn

      - name: Upload installer (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: |
            dist/*.exe
            dist/*.msi
            dist/*.zip
            dist/*.7z
          if-no-files-found: warn
