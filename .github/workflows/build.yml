name: Build Desktop App (Win, no publish)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 90

    env:
      APP_DIR: ${{ github.workspace }}
      LOG_DIR: ${{ github.workspace }}\logs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node deps
        shell: pwsh
        run: |
          if (Test-Path -LiteralPath "package-lock.json") { npm ci } else { npm i }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Ensure python/pbs folder (safe)
        shell: pwsh
        run: |
          $pyRoot = Join-Path $env:APP_DIR 'python'
          $pbsDir = Join-Path $pyRoot 'pbs'
          New-Item -ItemType Directory -Force -Path $pyRoot | Out-Null
          if (Test-Path -LiteralPath $pbsDir -PathType Leaf) { Remove-Item -LiteralPath $pbsDir -Force }
          if (-not (Test-Path -LiteralPath $pbsDir -PathType Container)) { New-Item -ItemType Directory -Force -Path $pbsDir | Out-Null }
          New-Item -ItemType Directory -Force -Path $env:LOG_DIR | Out-Null
          Set-Content -Path (Join-Path $pbsDir 'ok') -Value 'ok' -Encoding ascii

      - name: Build (no publish)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          npx electron-builder --win --x64 --publish never *> "$env:LOG_DIR\eb.log"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: ${{ env.LOG_DIR }}\**
          if-no-files-found: warn

      - name: Upload installers
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: |
            dist\*.exe
            dist\*.msi
            dist\*.zip
          if-no-files-found: warn
