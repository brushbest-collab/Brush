name: Build Desktop App (Win, no publish)

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 只有存在 package.json 才安裝（避免沒有前端專案時失敗）
      - name: Install Node deps (skip if no package.json)
        if: ${{ hashFiles('package.json') != '' }}
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) { npm ci } else { npm i }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Ensure python/pbs folder (safe)
        shell: pwsh
        run: |
          $pbsDir = Join-Path $env:GITHUB_WORKSPACE 'python\pbs'
          if (-not (Test-Path $pbsDir)) {
            New-Item -ItemType Directory -Force -Path $pbsDir | Out-Null
          }
          Set-Content -LiteralPath (Join-Path $pbsDir 'ok') -Value 'ok' -Encoding ascii

      - name: Build (no publish)
        if: ${{ hashFiles('package.json') != '' }}
        shell: pwsh
        run: npx electron-builder --win --x64 --publish never

      # 收集 npm log 到工作區，避免 rootDirectory 錯誤
      - name: Collect npm logs (best-effort)
        shell: pwsh
        run: |
          $dst = Join-Path $env:GITHUB_WORKSPACE 'logs\npm'
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          $paths = @(
            'C:\npm\_logs',
            "$env:USERPROFILE\AppData\Local\npm-cache\_logs"
          )
          foreach ($p in $paths) {
            if (Test-Path $p) {
              Get-ChildItem -Path $p -Recurse -File -ErrorAction SilentlyContinue |
                Copy-Item -Destination $dst -Force -ErrorAction SilentlyContinue
            }
          }

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/**/*
          if-no-files-found: ignore
