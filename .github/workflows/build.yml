name: Build Desktop App (Win, no publish)

on:
  workflow_dispatch: {}
  push:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      NPM_CONFIG_FUND: "false"
      NPM_CONFIG_AUDIT: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure logs dir
        shell: pwsh
        run: New-Item -ItemType Directory -Force -Path "$env:GITHUB_WORKSPACE\logs" | Out-Null

      - name: Locate app dir
        id: locate
        shell: pwsh
        run: |
          $pkg = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Filter package.json -Recurse -Depth 6 -File |
            Where-Object { $_.FullName -notmatch '\\node_modules\\' } | Select-Object -First 1
          if (-not $pkg) { throw "package.json not found" }
          "APP_DIR=$($pkg.DirectoryName)" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "APP_DIR = $($pkg.DirectoryName)"

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node deps
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        run: |
          if (Test-Path "package-lock.json") { npm ci --loglevel verbose } else { npm install --legacy-peer-deps --loglevel verbose }
          npx --yes electron-builder --version | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\logs\eb-version.txt"

      - name: Build (no publish)
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        run: |
          npx electron-builder --win --x64 --publish never 2>&1 |
            Tee-Object -FilePath "$env:GITHUB_WORKSPACE\logs\electron-builder.txt"
          if (-not (Get-ChildItem -Path "dist" -Include *.exe,*.msi -Recurse -ErrorAction SilentlyContinue)) {
            throw "No installers produced."
          }

      - name: Upload installers
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: ${{ env.APP_DIR }}/dist/**
          if-no-files-found: error

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: logs/**
          if-no-files-found: warn
