name: Build Desktop App (portable python)

on:
  workflow_dispatch:
  # 如果你不想一 push 就跑，註解掉下面三行
  push:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 180
    env:
      NPM_CONFIG_FUND: false
      NPM_CONFIG_AUDIT: false
      CSC_IDENTITY_AUTO_DISCOVERY: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare logs
        shell: pwsh
        run: New-Item -ItemType Directory -Force -Path logs | Out-Null

      - name: Locate app dir
        id: locate
        shell: pwsh
        run: |
          $pkg = Get-ChildItem -Filter package.json -Recurse -File -Depth 6 | Where-Object { $_.FullName -notmatch '\\node_modules\\' } | Select-Object -First 1
          if (-not $pkg) { throw "package.json not found" }
          "APP_DIR=$($pkg.DirectoryName)" | Out-File -Append -FilePath $env:GITHUB_ENV
          Write-Host "APP_DIR=$($pkg.DirectoryName)"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node deps (lockfile-aware)
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        run: |
          if (Test-Path "package-lock.json") { npm ci } else { npm install --legacy-peer-deps }

      - name: Ensure electron-builder available
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        run: |
          npx --yes electron-builder --version | Tee-Object -FilePath $env:GITHUB_WORKSPACE/logs/eb-version.txt

      # 可攜式 Python（同你之前的流程，省略 wheels / model）
      - name: Bundle portable Python (PBS)
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        run: |
          New-Item -ItemType Directory -Force -Path "python" | Out-Null
          $url = "https://github.com/indygreg/python-build-standalone/releases/download/20240713/cpython-3.10.14+20240713-x86_64-pc-windows-msvc-shared-pgo-full.zip"
          $zip = "pbs.zip"
          Invoke-WebRequest -Uri $url -OutFile $zip
          Expand-Archive -Path $zip -DestinationPath "python\_pbs_extract" -Force
          $py = Get-ChildItem "python\_pbs_extract" -Recurse -Filter python.exe | Select-Object -First 1
          if (-not $py) { throw "pbs python.exe not found" }
          New-Item -ItemType Directory -Force -Path "python\pbs" | Out-Null
          Copy-Item $py.Directory.FullName\* -Destination "python\pbs" -Recurse -Force
          Remove-Item $zip -Force
          Write-Host "PBS ready."

      - name: Build Windows installer
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        run: |
          $env:DEBUG="electron-builder"
          npx electron-builder --win --x64 --publish never *>&1 | Tee-Object -FilePath $env:GITHUB_WORKSPACE/logs/eb-build.log

      - name: Upload installers
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: ${{ env.APP_DIR }}/dist/*

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: logs/**
