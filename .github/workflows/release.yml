name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:

permissions:
  contents: write   # 需要建立 GitHub Release

jobs:
  release-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node deps (skip if no package.json)
        shell: pwsh
        run: |
          if (Test-Path 'package-lock.json') { npm ci }
          elseif (Test-Path 'package.json') { npm i }
          else { Write-Host 'No package.json found, skip npm install' }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Ensure pbs & model folders (safe)
        shell: pwsh
        run: |
          $pbsDir   = Join-Path $env:GITHUB_WORKSPACE 'python\pbs'
          $modelDir = Join-Path $env:GITHUB_WORKSPACE 'resources\python\models\sd-turbo'
          New-Item -ItemType Directory -Path $pbsDir   -Force | Out-Null
          New-Item -ItemType Directory -Path $modelDir -Force | Out-Null
          Set-Content -LiteralPath (Join-Path $pbsDir 'ok') -Value 'ok' -Encoding ascii

      - name: Download SDXL-Turbo model
        shell: pwsh
        run: |
          python -m pip install -U huggingface_hub hf_transfer > $null
          python - <<'PY'
          from huggingface_hub import snapshot_download
          from pathlib import Path
          import os
          target = Path(os.environ["GITHUB_WORKSPACE"]) / "resources" / "python" / "models" / "sd-turbo"
          target.mkdir(parents=True, exist_ok=True)
          snapshot_download("stabilityai/sdxl-turbo", local_dir=target, local_dir_use_symlinks=False)
          print("Model at", target)
          PY

      - name: Build & publish with electron-builder
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          npx --yes electron-builder --win --x64 --publish always

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs\**\*.log
