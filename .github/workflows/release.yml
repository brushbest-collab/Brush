name: Release (Win, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag（例如 v1.2.3；留空則自動產生）"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest
    timeout-minutes: 180
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node dependencies
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) { npm ci } else { npm i }

      - name: Ensure icon exists (optional)
        shell: pwsh
        run: |
          if (-not (Test-Path build\icon.ico)) {
            New-Item -ItemType Directory -Path build -Force | Out-Null
            (New-Object Net.WebClient).DownloadFile(
              'https://raw.githubusercontent.com/electron/electron/main/docs/images/icons/win/icon.ico',
              'build\icon.ico'
            )
          }

      - name: Build (no publish yet)
        shell: pwsh
        env:
          DEBUG: "electron-builder"
        run: |
          npx electron-builder --win --x64 --publish never *> $env:GITHUB_WORKSPACE/eb.log
          if (-not (Test-Path dist)) { throw "No installers produced." }

      - name: Create tag (optional)
        if: ${{ inputs.tag != '' }}
        shell: pwsh
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ inputs.tag }}
          git push origin ${{ inputs.tag }}

      - name: Create GitHub Release
        shell: pwsh
        run: |
          $tag = if ("${{ inputs.tag }}") { "${{ inputs.tag }}" } else { "v$(Get-Date -Format 'yyyy.MM.dd.HHmm')" }
          gh release create $tag --notes "Automated Windows build" --title $tag
          Get-ChildItem dist -Recurse -Include *.exe,*.msi,*.zip,*.7z |
            ForEach-Object { gh release upload $tag $_.FullName --clobber }

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: |
            eb.log
            **\*.log
