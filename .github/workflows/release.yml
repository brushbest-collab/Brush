name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for this release (e.g. v0.1.0). Leave empty to use commit SHA.'
        required: false

jobs:
  release-windows:
    runs-on: windows-latest
    env:
      APP_DIR: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node deps
        shell: pwsh
        run: |
          if (Test-Path 'package-lock.json') { npm ci } else { npm i }

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Ensure pbs & model folders (safe)
        shell: pwsh
        run: |
          $root   = "${{ env.APP_DIR }}"
          $py     = Join-Path $root 'python'
          $pbs    = Join-Path $py   'pbs'
          $model  = Join-Path $py   'models\sd-turbo'
          New-Item -ItemType Directory -Force -Path $py,$pbs,$model | Out-Null
          Set-Content -LiteralPath (Join-Path $pbs 'ok') -Value 'ok' -Encoding ascii

      - name: Download SDXL-Turbo model
        shell: pwsh
        env:
          HF_HUB_ENABLE_HF_TRANSFER: '1'
        run: |
          python - <<'PY'
          from pathlib import Path
          from huggingface_hub import snapshot_download
          target = Path(r"${{ env.APP_DIR }}\python\models\sd-turbo")
          target.mkdir(parents=True, exist_ok=True)
          snapshot_download(repo_id="stabilityai/sdxl-turbo",
                            local_dir=str(target),
                            local_dir_use_symlinks=False)
          print("Model saved to:", target)
          PY

      - name: Build & publish (electron-builder)
        shell: pwsh
        run: |
          npx electron-builder --win --x64
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            logs\**\*.log
          if-no-files-found: ignore

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag != '' && inputs.tag || github.sha }}
          name:     ${{ inputs.tag != '' && inputs.tag || github.sha }}
          files: |
            dist\*.exe
            dist\*.msi
            dist\*.zip
