name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:

jobs:
  release-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node deps (skip if no package.json)
        if: ${{ hashFiles('package.json') != '' }}
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) { npm ci } else { npm i }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Ensure pbs & model folders (safe)
        shell: pwsh
        run: |
          $root    = $env:GITHUB_WORKSPACE
          $pbsDir  = Join-Path $root 'python\pbs'
          $mdlDir  = Join-Path $root 'python\models\sd-turbo'
          foreach ($d in @($pbsDir, $mdlDir)) {
            if (-not (Test-Path $d)) {
              New-Item -ItemType Directory -Force -Path $d | Out-Null
            }
          }
          Set-Content -LiteralPath (Join-Path $pbsDir 'ok') -Value 'ok' -Encoding ascii

      - name: Download SDXL-Turbo model
        shell: pwsh
        env:
          HF_ENDPOINT: https://huggingface.co
        run: |
          python -m pip install -U pip
          python -m pip install "huggingface_hub>=0.22.0" hf_transfer
          $target = Join-Path $env:GITHUB_WORKSPACE 'python\models\sd-turbo'
          $code = @'
          from huggingface_hub import snapshot_download
          import os
          target = os.environ["TARGET_DIR"]
          snapshot_download(
              repo_id="stabilityai/sdxl-turbo",
              local_dir=target,
              local_dir_use_symlinks=False
          )
          print("Model saved to:", target)
          '@
          Set-Content -Path download_model.py -Value $code -Encoding UTF8
          $env:TARGET_DIR = $target
          python download_model.py

      - name: Build & publish (electron-builder)
        if: ${{ hashFiles('package.json') != '' }}
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win --x64 --publish always

      - name: Collect npm logs (best-effort)
        shell: pwsh
        run: |
          $dst = Join-Path $env:GITHUB_WORKSPACE 'logs\npm'
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          $paths = @(
            'C:\npm\_logs',
            "$env:USERPROFILE\AppData\Local\npm-cache\_logs"
          )
          foreach ($p in $paths) {
            if (Test-Path $p) {
              Get-ChildItem -Path $p -Recurse -File -ErrorAction SilentlyContinue |
                Copy-Item -Destination $dst -Force -ErrorAction SilentlyContinue
            }
          }

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/**/*
          if-no-files-found: ignore
