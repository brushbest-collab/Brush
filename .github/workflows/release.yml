name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (例如 v0.1.0)，可留空'
        required: false
        type: string

jobs:
  release-windows:
    runs-on: windows-latest
    env:
      APP_DIR: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # 不啟用 cache，避免沒有 lock file 時出錯

      - name: Install Node deps
        shell: pwsh
        run: |
          if (Test-Path "package-lock.json") { npm ci } else { npm i }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Ensure pbs & model folders (safe)
        shell: pwsh
        run: |
          $pyDir   = Join-Path $env:APP_DIR 'python'
          $modelDir= Join-Path $pyDir 'models\sd-turbo'
          $pbsDir  = Join-Path $pyDir 'pbs'
          New-Item -ItemType Directory -Path $pyDir    -Force | Out-Null
          New-Item -ItemType Directory -Path $modelDir -Force | Out-Null
          New-Item -ItemType Directory -Path $pbsDir   -Force | Out-Null
          Set-Content -Path (Join-Path $pbsDir 'ok') -Value 'ok' -Encoding ascii

      - name: Download SDXL-Turbo model
        shell: pwsh
        run: |
          python - << 'PY'
          from pathlib import Path
          from huggingface_hub import snapshot_download
          target = Path(r"${{ github.workspace }}") / "python" / "models" / "sd-turbo"
          target.mkdir(parents=True, exist_ok=True)
          snapshot_download(repo_id="stabilityai/sdxl-turbo",
                            local_dir=str(target),
                            local_dir_use_symlinks=False)
          print("Model saved to", target)
          PY

      - name: Create tag (optional)
        if: ${{ inputs.tag != '' }}
        shell: pwsh
        env:
          TAG: ${{ inputs.tag }}
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git tag $env:TAG
          git push origin $env:TAG

      - name: Build & publish with electron-builder
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = "Stop"
          New-Item -ItemType Directory -Path "$env:GITHUB_WORKSPACE\logs" -Force | Out-Null
          npx electron-builder --win --x64 *>&1 `
            | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\logs\eb.log"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: logs\**\*.log
          if-no-files-found: warn
