name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.2.3；留空則自動產生)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      APP_DIR: ${{ github.workspace }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node deps
        run: npm ci

      - name: Prepare Python (venv + deps + PBS marker)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $app   = "$env:APP_DIR"
          $pyDir = Join-Path $app 'python'
          New-Item -ItemType Directory -Force -Path $pyDir | Out-Null

          python -m venv (Join-Path $pyDir 'venv')
          $venvPy = Join-Path $pyDir 'venv\Scripts\python.exe'

          & $venvPy -m pip install --upgrade pip wheel
          if (Test-Path (Join-Path $app 'python\requirements.txt')) {
            & $venvPy -m pip install -r (Join-Path $app 'python\requirements.txt')
          }
          & $venvPy -m pip install 'huggingface_hub[hf_transfer]'

          New-Item -ItemType Directory -Force -Path (Join-Path $pyDir 'pbs') | Out-Null
          Set-Content -Path (Join-Path $pyDir 'pbs\OK') -Value 'ok' -Encoding ASCII

      - name: Download SDXL-Turbo model
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $pyDir  = Join-Path "$env:APP_DIR" 'python'
          $venvPy = Join-Path $pyDir 'venv\Scripts\python.exe'
          $code = @'
          from huggingface_hub import snapshot_download
          from pathlib import Path
          target = Path(r"python/models/sd-turbo")
          snapshot_download(repo_id="stabilityai/sdxl-turbo",
                            local_dir=str(target),
                            local_dir_use_symlinks=False)
          print("model saved to", target)
          '@
          $tmp = Join-Path $env:RUNNER_TEMP 'dl_model.py'
          Set-Content -Path $tmp -Value $code -Encoding UTF8
          & $venvPy $tmp 2>&1 | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\logs\model-download.txt"

      # （可選）建立標籤
      - name: Create tag (optional)
        if: ${{ inputs.tag != '' }}
        shell: pwsh
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git tag  $env:INPUTS_TAG
          git push origin $env:INPUTS_TAG

      - name: Build & publish to GitHub Releases
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          npx electron-builder --win --x64 --publish always 2>&1 | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\eb.log"

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: |
            eb.log
            logs/**
