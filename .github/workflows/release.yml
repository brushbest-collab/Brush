name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag（留空則用 package.json 版本自動建立）'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest
    timeout-minutes: 180
    env:
      APP_DIR: ${{ github.workspace }}
      DOWNLOAD_MODEL: 'true'   # 釋出版本要把模型一起打包

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node deps
        shell: pwsh
        run: |
          if (Test-Path "package-lock.json") { npm ci } else { npm i }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Prepare Python (venv + deps + pbs)
        shell: pwsh
        run: |
          $pyRoot = Join-Path $env:APP_DIR "resources/python"
          New-Item -ItemType Directory -Force -Path $pyRoot | Out-Null

          python -m venv (Join-Path $pyRoot "venv")
          $venvPy = Join-Path $pyRoot "venv/Scripts/python.exe"

          & $venvPy -m pip install --upgrade pip
          if (Test-Path "python/requirements.txt") {
            & $venvPy -m pip install -r "python/requirements.txt"
          }
          & $venvPy -m pip install huggingface_hub hf_transfer
          Set-Content -Path (Join-Path $pyRoot "pbs") -Value "ok" -Encoding ascii

      - name: Download SDXL-Turbo model
        shell: pwsh
        run: |
          $pyRoot = Join-Path $env:APP_DIR "resources/python"
          $venvPy = Join-Path $pyRoot "venv/Scripts/python.exe"
          $code = @'
from huggingface_hub import snapshot_download
from pathlib import Path
target = Path("resources/python/models/sd-turbo")
target.mkdir(parents=True, exist_ok=True)
snapshot_download(repo_id="stabilityai/sdxl-turbo", local_dir=str(target), local_dir_use_symlinks=False)
print("Model at", target)
'@
          $tmp = Join-Path $env:RUNNER_TEMP "download_model.py"
          Set-Content -Path $tmp -Value $code -Encoding UTF8
          & $venvPy $tmp | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\eb.log" -Append

      - name: Build (no publish)
        shell: pwsh
        run: |
          npx electron-builder --win --x64 --publish=never | Tee-Object -FilePath eb.log

      - name: Read version from package.json
        id: ver
        shell: pwsh
        run: |
          $v = (Get-Content package.json | ConvertFrom-Json).version
          "ver=$v" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Compute tag
        id: tag
        shell: pwsh
        env:
          INPUT_TAG: ${{ inputs.tag }}
          PKG_VER: ${{ steps.ver.outputs.ver }}
        run: |
          if ($env:INPUT_TAG -and $env:INPUT_TAG.Trim() -ne '') { $t = $env:INPUT_TAG } else { $t = "v$($env:PKG_VER)" }
          "tag=$t" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          files: |
            dist/*.exe
            dist/*.blockmap
            dist/latest.yml
            dist/win-unpacked/**/*

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: eb.log
