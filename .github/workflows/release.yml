name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g. v1.2.3). Leave blank to skip tagging."
        required: false
        default: ""

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      APP_DIR: ${{ github.workspace }}
      HF_HUB_ENABLE_HF_TRANSFER: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Ensure pbs marker & model folder
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "python\pbs" | Out-Null
          New-Item -ItemType Directory -Force -Path "python\models\sd-turbo" | Out-Null
          "ok" | Set-Content -Path "python\pbs\ok" -Encoding ascii

      - name: Create venv & install deps
        shell: pwsh
        run: |
          $venvRoot = "resources\python"
          New-Item -ItemType Directory -Force -Path $venvRoot | Out-Null
          python -m venv "$venvRoot\venv"
          $venvPy = Join-Path $venvRoot 'venv\Scripts\python.exe'
          & $venvPy -m pip install --upgrade pip wheel
          if (Test-Path 'python\requirements.txt') {
            & $venvPy -m pip install -r 'python\requirements.txt'
          }
          & $venvPy -m pip install huggingface_hub hf_transfer

      - name: Download SDXL-Turbo model
        shell: pwsh
        env:
          VENV_PY: resources\python\venv\Scripts\python.exe
        run: |
          $tmp = Join-Path $env:RUNNER_TEMP 'download_model.py'
          @"
          from pathlib import Path
          from huggingface_hub import snapshot_download
          target = Path(r"python/models/sd-turbo")
          target.mkdir(parents=True, exist_ok=True)
          snapshot_download(repo_id="stabilityai/sdxl-turbo", local_dir=str(target), local_dir_use_symlinks=False)
          print("Model saved to:", target)
          "@ | Set-Content -Path $tmp -Encoding UTF8
          & $env:VENV_PY $tmp 2>&1 | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\model-download.log"

      - name: Install Node dependencies
        shell: pwsh
        run: |
          if (Test-Path "package-lock.json") { npm ci } else { npm i }

      - name: Create tag (optional)
        if: ${{ inputs.tag != '' }}
        shell: pwsh
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ inputs.tag }}
          git push origin ${{ inputs.tag }}

      - name: Build & publish with electron-builder
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = 'Stop'
          npx electron-builder --win --x64 --publish always 2>&1 | Tee-Object -FilePath "$env:GITHUB_WORKSPACE\eb.log"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: |
            eb.log
            model-download.log
            **\*.log
