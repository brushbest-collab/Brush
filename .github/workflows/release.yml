name: Release (manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (e.g. v0.4.0) â€” optional"
        required: false
        default: ""
      prerelease:
        description: "Mark as prerelease? (true/false)"
        required: false
        default: "false"

permissions:
  contents: write

jobs:
  release-windows:
    if: github.event_name == 'workflow_dispatch'
    runs-on: windows-latest
    timeout-minutes: 180
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_CONFIG_FUND: false
      NPM_CONFIG_AUDIT: false
      CSC_IDENTITY_AUTO_DISCOVERY: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare logs
        shell: pwsh
        run: New-Item -ItemType Directory -Force -Path logs | Out-Null

      - name: Locate app dir
        id: locate
        shell: pwsh
        run: |
          $pkg = Get-ChildItem -Filter package.json -Recurse -File -Depth 6 | Where-Object { $_.FullName -notmatch '\\node_modules\\' } | Select-Object -First 1
          if (-not $pkg) { throw "package.json not found" }
          "APP_DIR=$($pkg.DirectoryName)" | Out-File -Append -FilePath $env:GITHUB_ENV
          Write-Host "APP_DIR=$($pkg.DirectoryName)"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node deps
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        run: |
          if (Test-Path "package-lock.json") { npm ci } else { npm install --legacy-peer-deps }
          npx --yes electron-builder --version | Tee-Object -FilePath $env:GITHUB_WORKSPACE/logs/eb-version.txt

      - name: Build & Publish to GitHub Release
        shell: pwsh
        working-directory: ${{ env.APP_DIR }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ("${{ github.event.inputs.version }}" -ne "") {
            $pkg = Get-Content package.json -Raw | ConvertFrom-Json
            $pkg.version = "${{ github.event.inputs.version }}".TrimStart("v")
            ($pkg | ConvertTo-Json -Depth 100) | Set-Content package.json -Encoding UTF8
          }
          $env:DEBUG="electron-builder"
          npx electron-builder --win --x64 --publish always *>&1 | Tee-Object -FilePath $env:GITHUB_WORKSPACE/logs/release-eb.log

          $pr = "${{ github.event.inputs.prerelease }}"
          if ($pr -eq "true") {
            $tag = gh release list --limit 1 --json tagName -q ".[0].tagName"
            if ($LASTEXITCODE -eq 0 -and $tag) { gh release edit $tag --prerelease }
          }

      - name: Upload release logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: logs/**
