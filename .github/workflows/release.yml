name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (例如 v1.2.3；留空則自動產生)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node dependencies
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) { npm ci } else { npm i }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create venv & install Python deps
        shell: pwsh
        run: |
          $app = Resolve-Path .
          $pyRoot = Join-Path $app 'resources/python'
          $venv   = Join-Path $pyRoot 'venv'
          New-Item -ItemType Directory -Force -Path $pyRoot | Out-Null

          python -m venv $venv
          $venvPy = Join-Path $venv 'Scripts/python.exe'

          & $venvPy -m pip install --upgrade pip wheel
          if (Test-Path 'python/requirements.txt') {
            & $venvPy -m pip install -r 'python/requirements.txt'
          }
          & $venvPy -m pip install huggingface_hub hf_transfer

          # portable bootstrap marker
          New-Item -ItemType File -Force -Path (Join-Path $pyRoot 'pbs') | Out-Null

      - name: Download SDXL-Turbo model (best-effort)
        shell: pwsh
        env:
          HF_HUB_ENABLE_HF_TRANSFER: "1"
        run: |
          $app   = Resolve-Path .
          $pyRoot = Join-Path $app 'resources/python'
          $venvPy = Join-Path $pyRoot 'venv/Scripts/python.exe'
          $log = Join-Path $env:GITHUB_WORKSPACE 'logs\model-download.txt'
          New-Item -ItemType Directory -Force -Path (Split-Path $log) | Out-Null

          $code = @"
from huggingface_hub import snapshot_download
from pathlib import Path
root = Path(r'''$pyRoot''')
target = root / 'models' / 'sd-turbo'
target.mkdir(parents=True, exist_ok=True)
try:
    snapshot_download(repo_id='stabilityai/sdxl-turbo', local_dir=str(target), local_dir_use_symlinks=False)
    print('Model saved to', target)
except Exception as e:
    print('Model download skipped:', e)
"@
          $code | Out-File dl.py -Encoding utf8
          & $venvPy dl.py *>&1 | Tee-Object -FilePath $log
          Remove-Item dl.py -Force

      - name: Build (create installers)
        shell: pwsh
        run: |
          $env:CI = "true"
          npx electron-builder --win --x64 *> eb.log

      - name: Upload installers (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: dist/*

      - name: Create tag (optional)
        if: ${{ inputs.tag != '' }}
        shell: pwsh
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git tag $env:TAG
          git push origin $env:TAG
        env:
          TAG: ${{ inputs.tag }}

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag != '' && inputs.tag || format('build-{0}', github.run_number) }}
          name: ${{ inputs.tag != '' && inputs.tag || format('Build {0}', github.run_number) }}
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.msi
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: |
            eb.log
            logs/**/*.txt
