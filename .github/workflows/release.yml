name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v0.1.1). Leave blank to skip tagging'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest
    timeout-minutes: 90
    env:
      APP_DIR: ${{ github.workspace }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node dependencies
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) { npm ci } else { npm i }

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Ensure pbs marker & model dirs
        shell: pwsh
        run: |
          $pyDir  = Join-Path $env:APP_DIR 'python'
          $pbsDir = Join-Path $pyDir 'pbs'
          $mdlDir = Join-Path $pyDir 'models\sd-turbo'
          [System.IO.Directory]::CreateDirectory($pyDir)  | Out-Null
          [System.IO.Directory]::CreateDirectory($pbsDir) | Out-Null
          [System.IO.Directory]::CreateDirectory($mdlDir) | Out-Null
          Set-Content -Path (Join-Path $pbsDir 'ok') -Value 'ok' -Encoding ascii

      - name: Prepare Python venv (optional)
        shell: pwsh
        run: |
          python -m venv "$env:APP_DIR\python\venv"
          $venvPy = Join-Path $env:APP_DIR 'python\venv\Scripts\python.exe'
          & $venvPy -m pip install --upgrade pip wheel
          if (Test-Path "$env:APP_DIR\python\requirements.txt") {
            & $venvPy -m pip install -r "$env:APP_DIR\python\requirements.txt"
          }
          & $venvPy -m pip install huggingface_hub hf_transfer

      - name: Download SDXL-Turbo model
        shell: pwsh
        env:
          HF_HUB_ENABLE_HF_TRANSFER: '1'
        run: |
          $s = @'
          from huggingface_hub import snapshot_download
          from pathlib import Path
          p = Path("python/models/sd-turbo")
          p.mkdir(parents=True, exist_ok=True)
          snapshot_download(repo_id="stabilityai/sdxl-turbo", local_dir=str(p), local_dir_use_symlinks=False)
          print("Model downloaded to", p)
          '@
          $tf = Join-Path $env:RUNNER_TEMP "dl_model.py"
          $s | Set-Content -Path $tf -Encoding UTF8
          $venvPy = Join-Path $env:APP_DIR 'python\venv\Scripts\python.exe'
          if (Test-Path $venvPy) { & $venvPy $tf } else { python $tf }

      - name: Create tag (optional)
        if: ${{ github.event.inputs.tag != '' }}
        shell: pwsh
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "${{ github.event.inputs.tag }}"
          git push origin "${{ github.event.inputs.tag }}"

      - name: Build & publish with electron-builder
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          npx electron-builder --win --x64 --publish always *>&1 | Tee-Object -FilePath "$env:APP_DIR\eb.log"

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: eb.log
          if-no-files-found: warn
