name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag（例如 v1.0.0；留空就不打 tag）"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest
    timeout-minutes: 30

    env:
      APP_DIR: ${{ github.workspace }}
      VENV: ${{ github.workspace }}\resources\python\venv
      PYEXE: ${{ github.workspace }}\resources\python\venv\Scripts\python.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Node dependencies
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) { npm ci } else { npm i }

      - name: Create venv & install Python deps
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $pyRoot = Join-Path $env:APP_DIR 'resources/python'
          New-Item -ItemType Directory -Force -Path $pyRoot | Out-Null
          python -m venv $env:VENV
          $venvPy = "$env:PYEXE"
          & $venvPy -m pip install --upgrade pip wheel
          if (Test-Path 'python/requirements.txt') {
            & $venvPy -m pip install -r 'python/requirements.txt'
          } else {
            & $venvPy -m pip install huggingface_hub hf_transfer
          }

      - name: Ensure pbs marker exists
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path 'python/pbs' | Out-Null
          Set-Content -Path 'python/pbs/ok' -Value 'ok' -Encoding ascii

      - name: Download SDXL-Turbo model
        shell: pwsh
        env:
          HF_HUB_ENABLE_HF_TRANSFER: "1"
        run: |
          $ErrorActionPreference = 'Stop'
          New-Item -ItemType Directory -Force -Path 'python/models/sd-turbo' | Out-Null
          $script = @'
from huggingface_hub import snapshot_download
import os
dst = os.path.join("python","models","sd-turbo")
os.makedirs(dst, exist_ok=True)
snapshot_download(
    repo_id="stabilityai/sdxl-turbo",
    local_dir=dst,
    local_dir_use_symlinks=False
)
print("Model downloaded to:", dst)
'@
          $fn = "$env:RUNNER_TEMP\download_model.py"
          $script | Set-Content -Encoding UTF8 $fn
          & "$env:PYEXE" $fn *>> "$env:GITHUB_WORKSPACE\logs\model-download.log"

      - name: Build & publish to GitHub Releases
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = 'Stop'
          New-Item -ItemType Directory -Force -Path 'logs' | Out-Null
          npx electron-builder --win --x64 --publish always *>> "$env:GITHUB_WORKSPACE\logs\eb.log"

      - name: Create tag (optional)
        if: ${{ inputs.tag != '' }}
        shell: pwsh
        env:
          INPUT_TAG: ${{ inputs.tag }}
        run: |
          git config user.email "github-actions@github.com"
          git config user.name  "github-actions"
          git tag $env:INPUT_TAG
          git push origin $env:INPUT_TAG

      - name: Upload logs & artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: |
            logs/**
            dist/**
