name: Release (Win + model, GitHub Releases)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release-windows:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node deps
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) { npm ci } else { npm i }

      - name: Prepare Python (venv + deps + PBS marker)
        shell: pwsh
        run: |
          $pyRoot = Join-Path $env:GITHUB_WORKSPACE 'resources/python'
          New-Item -ItemType Directory -Force -Path $pyRoot | Out-Null
          python -m venv (Join-Path $pyRoot 'venv')
          $venvPy = Join-Path $pyRoot 'venv/Scripts/python.exe'
          & $venvPy -m pip install --upgrade pip
          if (Test-Path 'python/requirements.txt') { & $venvPy -m pip install -r 'python/requirements.txt' }
          & $venvPy -m pip install huggingface_hub hf_transfer
          Set-Content -Path (Join-Path $pyRoot 'pbs') -Value 'ok' -Encoding ascii

      - name: Download SDXL-Turbo model
        shell: pwsh
        run: |
          $venvPy = Join-Path $env:GITHUB_WORKSPACE 'resources/python/venv/Scripts/python.exe'
          $lines = @(
            'from pathlib import Path'
            'from huggingface_hub import snapshot_download'
            't=Path(r"resources/python/models/sd-turbo")'
            't.mkdir(parents=True, exist_ok=True)'
            'snapshot_download(repo_id="stabilityai/sdxl-turbo", local_dir=str(t), local_dir_use_symlinks=False)'
            'print("Model at", t)'
          )
          $tmp = Join-Path $env:RUNNER_TEMP 'download_model.py'
          Set-Content -Path $tmp -Value ($lines -join "`n") -Encoding UTF8
          & $venvPy $tmp | Tee-Object -FilePath "$env:GITHUB_WORKSPACE/eb.log" -Append

      - name: Build & publish to GitHub Releases
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          npx electron-builder --win --x64 --publish always *> "$env:GITHUB_WORKSPACE/eb.log"

      - name: Upload logs (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          path: eb.log
          if-no-files-found: ignore
